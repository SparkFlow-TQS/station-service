name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: 'maven'
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: ./mvnw clean verify
      env:
        SPRING_PROFILES_ACTIVE: test
        OPENCHARGEMAP_API_KEY: ${{ secrets.OPENCHARGEMAP_API_KEY }}
    
    - name: Run Cucumber Tests
      run: ./mvnw verify -Dtest=CucumberTestRunner
      env:
        SPRING_PROFILES_ACTIVE: test
        OPENCHARGEMAP_API_KEY: ${{ secrets.OPENCHARGEMAP_API_KEY }}
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          **/target/surefire-reports
          **/target/failsafe-reports
          **/target/cucumber-reports
    
    - name: Push results to Xray on Jira Cloud
      run: ./mvnw xray:import-results
      env:
        XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
        XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
        XRAY_PROJECT_KEY: ${{ secrets.XRAY_PROJECT_KEY }}
    
    - name: Check Test Coverage
      run: |
        COVERAGE=$(grep -o '<coverage>.*</coverage>' target/site/jacoco/jacoco.xml | sed 's/<coverage>\(.*\)<\/coverage>/\1/')
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "Test coverage is below 80%: $COVERAGE%"
          exit 1
        fi
      if: always()